import queryString from "query-string";

export type DeviceIdentification = {
  version: "1";
  idKey: string;
  signingKey: string;
  oneTimeKey: string;
  secret: string;
  fallbackKey: string;
  fallbackKeySignature: string;
};

export function parse(value: string): DeviceIdentification {
  const result = queryString.parse(value);
  if (typeof result.version !== "string") {
    throw new Error("Missing the version entry.");
  }
  if (result.version !== "1") {
    throw new Error("The invitation was generated by a newer App version.");
  }
  if (typeof result.idKey !== "string") {
    throw new Error("Missing the idKey entry.");
  }
  if (typeof result.signingKey !== "string") {
    throw new Error("Missing the signingKey entry.");
  }
  if (typeof result.oneTimeKey !== "string") {
    throw new Error("Missing the oneTimeKey entry.");
  }
  if (typeof result.secret !== "string") {
    throw new Error("Missing the secret entry.");
  }
  if (typeof result.fallbackKey !== "string") {
    throw new Error("Missing the fallbackKey entry.");
  }
  if (typeof result.fallbackKeySignature !== "string") {
    throw new Error("Missing the fallbackKeySignature entry.");
  }
  return {
    version: "1",
    idKey: result.idKey,
    signingKey: result.signingKey,
    oneTimeKey: result.oneTimeKey,
    secret: result.secret,
    fallbackKey: result.fallbackKey,
    fallbackKeySignature: result.fallbackKeySignature,
  };
}

export function stringify(deviceIdentification: DeviceIdentification) {
  return queryString.stringify(deviceIdentification);
}
